/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import brownlomicki.BrownLomicki;
import brownlomicki.Period;
import brownlomicki.Product;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author miko
 */
public class MainGui extends javax.swing.JFrame {

    private int numberOfTableColumn = 3;
    private int numberOfTableRows = 4;
    private final DefaultTableModel tableModel;
    private List<String> titleList;
    private String logText;
    private List<Product> listOfProduct;
    private GanttDiagram ganttDiagram;
    private BrownLomicki brownLomicki;

    public MainGui() {
        initComponents();
        logText = "";
        tableModel = (DefaultTableModel) dataTable.getModel();
        //dataTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tableModel.setColumnCount(numberOfTableColumn);
        tableModel.setRowCount(numberOfTableRows);
        initTitleList();
        fillTable();
        fillTitleBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addProduct = new javax.swing.JButton();
        addMachine = new javax.swing.JButton();
        removeProduct = new javax.swing.JButton();
        removeMachine = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        calcButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        logField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        titleBox = new javax.swing.JComboBox<>();
        textTitle = new javax.swing.JTextField();
        changeTitle = new javax.swing.JButton();
        openFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(831, 478));
        setMinimumSize(new java.awt.Dimension(831, 478));

        addProduct.setText("Add Product");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        addMachine.setText("Add Machine");
        addMachine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMachineActionPerformed(evt);
            }
        });

        removeProduct.setText("Remove Product");
        removeProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductActionPerformed(evt);
            }
        });

        removeMachine.setText("Remove Machine");
        removeMachine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMachineActionPerformed(evt);
            }
        });

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(dataTable);

        calcButton.setText("Calculate");
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        logField.setEditable(false);
        logField.setColumns(20);
        logField.setRows(5);
        jScrollPane1.setViewportView(logField);

        jLabel1.setText("Create  by Michał Oleś   PK 2016");

        clearButton.setText("Clear Logs");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        titleBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleBoxActionPerformed(evt);
            }
        });

        changeTitle.setText("Change");
        changeTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTitleActionPerformed(evt);
            }
        });

        openFile.setText("Open From File");
        openFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(titleBox, 0, 0, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textTitle)
                                        .addGap(18, 18, 18)
                                        .addComponent(changeTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(openFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(calcButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(calcButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(openFile)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(changeTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearButton)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initTitleList() {
        titleList = new ArrayList<>();
        titleList.add("1");
        titleList.add("2");
        titleList.add("3");
        tableModel.setColumnIdentifiers(titleList.toArray());
    }

    private void fillTitleBox() {
        titleBox.removeAllItems();
        for (String s : titleList) {
            titleBox.addItem(s);
        }
    }

    private void fillTable() {
        for (int i = 0; i < numberOfTableColumn; i++) {
            for (int j = 0; j < numberOfTableRows; j++) {
                tableModel.setValueAt(""+0, j, i);
            }
        }

    }
    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        numberOfTableColumn++;
        tableModel.setColumnCount(numberOfTableColumn);
        titleList.add(titleList.size() + 1 + "");
        tableModel.setColumnIdentifiers(titleList.toArray());
        for (int i = 0; i < numberOfTableRows; i++) {
            tableModel.setValueAt(""+0, i, numberOfTableColumn - 1);
        }
        fillTitleBox();
    }//GEN-LAST:event_addProductActionPerformed

    private void addMachineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMachineActionPerformed
        numberOfTableRows++;
        tableModel.setRowCount(numberOfTableRows);
        for (int i = 0; i < numberOfTableColumn; i++) {
            tableModel.setValueAt(""+0, numberOfTableRows - 1, i);
        }
    }//GEN-LAST:event_addMachineActionPerformed

    private void removeProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductActionPerformed
        if (numberOfTableColumn > 1) {
            numberOfTableColumn--;
            tableModel.setColumnCount(numberOfTableColumn);
            titleList.remove(titleList.size() - 1);
            fillTitleBox();
        }

    }//GEN-LAST:event_removeProductActionPerformed

    private void removeMachineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMachineActionPerformed
        if (numberOfTableRows > 1) {
            numberOfTableRows--;
            tableModel.setRowCount(numberOfTableRows);
        }
    }//GEN-LAST:event_removeMachineActionPerformed
    private List<Product> loadingDataFromTabele() throws Exception {
        List<Product> l = new ArrayList<>();
        Product product;
        String help;
        int[] timeInMachines;
        for (int i = 0; i < numberOfTableColumn; i++) {
            timeInMachines = new int[numberOfTableRows];
            for (int j = 0; j < numberOfTableRows; j++) {
                help = (String) tableModel.getValueAt(j, i);
                timeInMachines[j] = Integer.parseInt(help);
                if (timeInMachines[j] < 0) {
                    throw new IllegalAccessException();
                }
            }
            product = new Product(titleList.get(i), i, timeInMachines);
            l.add(product);
        }
        return l;
    }

    private void writeOptimalOrder(List<Product> listOfOptimalProducts) {
        logText += "\nOptimal Order:\n";
        int i = 1;
        for (Product product : listOfOptimalProducts) {
            logText += " Number in Order: " + i + "\n";
            i++;
            logText += " Number id:" + product.getNumber() + "\n";
            logText += " Name id: " + product.getIdName() + "\n";
            logText += " *Machines works periods*\n";
            for (Period period : product.getPeriodWorks()) {
                logText += " " + period.toString() + "\n";
            }
            logText += "-------------------\n";
        }
    }
    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed

        try {
            listOfProduct = loadingDataFromTabele();
            brownLomicki = new BrownLomicki(listOfProduct);
            int totalCost = brownLomicki.calculateCost();
            logText += "****START ALGORITHM***\n";
            logText += "Number of Product: " + numberOfTableColumn + "\n";
            logText += "Number of Machines: " + numberOfTableRows + "\n";
            writeOptimalOrder(brownLomicki.getOptimalOrder());
            logText += "Total Time Cost: " + totalCost + "\n";
            ganttDiagram = new GanttDiagram("Gantt Diagram", brownLomicki.getOptimalOrder());
            RefineryUtilities.centerFrameOnScreen(ganttDiagram);
            ganttDiagram.setVisible(true);
            logField.setText(logText);
        } catch (Exception e) {
            brownLomicki=null;
            logText += "WRONG DATA !!!!!\n";
            logField.setText(logText);
        }


    }//GEN-LAST:event_calcButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        logText = "";
        logField.setText(logText);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void titleBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleBoxActionPerformed

    private void changeTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTitleActionPerformed
        String title = textTitle.getText();
        textTitle.setText("");
        int index = titleBox.getSelectedIndex();
        titleList.remove(index);
        titleList.add(index, title);
        tableModel.setColumnIdentifiers(titleList.toArray());
        fillTitleBox();
    }//GEN-LAST:event_changeTitleActionPerformed
    private void loadingData(File file) {
        int c, r;
        List<Integer> listOfData = new ArrayList<>();
        List<String> title = new ArrayList<>();
        try {
            Scanner in = new Scanner(file);
            in.hasNext();
            c = in.nextInt();
            r = in.nextInt();
            if (in.nextInt() == 1) {
                in.nextLine();
                for (int i = 0; i < c; i++) {
                    title.add(in.nextLine());
                }
            }
            while (in.hasNext()) {
                listOfData.add(in.nextInt());
            }
            if (c * r != listOfData.size()) {
                throw new Exception();
            }
            numberOfTableColumn = c;
            numberOfTableRows = r;
            tableModel.setColumnCount(numberOfTableColumn);
            tableModel.setRowCount(numberOfTableRows);
            for (int i = 0; i < numberOfTableColumn; i++) {
                for (int j = 0; j < numberOfTableRows; j++) {
                    tableModel.setValueAt("" + listOfData.get(0), j, i);
                    listOfData.remove(0);
                }
            }
            titleList = title;
            tableModel.setColumnIdentifiers(titleList.toArray());
            fillTitleBox();
            logText += "Load Success\n";
        } catch (Exception e) {
            logText += "Load failed\n";

        }
        logField.setText(logText);
    }
    private void openFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        if (jFileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            loadingData(jFileChooser.getSelectedFile());
        } else {
            logText += "Do not choose file\n";
            logField.setText(logText);
        }
    }//GEN-LAST:event_openFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMachine;
    private javax.swing.JButton addProduct;
    private javax.swing.JButton calcButton;
    private javax.swing.JButton changeTitle;
    private javax.swing.JButton clearButton;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea logField;
    private javax.swing.JButton openFile;
    private javax.swing.JButton removeMachine;
    private javax.swing.JButton removeProduct;
    private javax.swing.JTextField textTitle;
    private javax.swing.JComboBox<String> titleBox;
    // End of variables declaration//GEN-END:variables

    private void Exception() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
